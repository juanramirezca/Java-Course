Arrays are used to store multiple values. And we can have any number of elements in the array.

2.1 Creating an array
There is an easy way to create arrays.

Examples:

int[] scores = {7, 5, 6};
int[] scores2 = {2, 3, 5, 1, 8, 7};

2.2 Defining an array
The syntax to define an array in Java is

Type[] <array_name> = new Type[<size>]

Example:

int[] scores3 = new int[5];

2.3 Indices of an array
In Java, the indices of an array start in zero. And to access to a specific index we can do the following

scores3[0];

And this will return the value of the array which index is zero.

2.4 Assigning values
To assign a value we can access by indices:

scores3[0] = 8;

2.5 Size of an array
There is a method to obtain the size of an array: length().

Example: 
scores3.lengt()

2.6 Printing all the elements 
We can print all the elements of an array in three ways: 

For loop: 
for(int i = 0; i < scores.length(); i++){
	System.out.println(scores[i]);
}

For-each loop:

for(int score: scores){
	System.out.println(number);
}

Array.toString() method:

System.println(Arrays.toString(scores));


2.7 Useful methods of the Array class
There are some useful methods that we can use from the Array class. Some of them are:

2.7.1 fill()
To fill an empty array;

Example:
int[] arr = new int[5];

Arrays.fill(arr, 100);

2.7.2 equals()
This method compares two arrays.
int[] arr2 = new int[5];
Arrays.fill(arr2, 100);

Arrays.equals(arr1, arr2);

2.7.3 sort()
This method is used to sort an array.
Arrays.sort(arr1)



